require(ggplot2)
require(readr)
require(dplyr)
library(survival)
library(reshape)
library(deSolve)
require(tidyr)

#Import datasets, clean, and combine into one dataset
sizes= read_csv("cannGR.csv")%>%
    dplyr::mutate(cannibal = replace_na(cannibal, 0.5))%>%
  mutate(cannibalf=as.factor(cannibal))%>%
  select(day, mass, cannibalf, pupation)

sizes2= read_csv(
  "~/Documents/Research Projects/Potato Beetle Egg Sibling Cannibalism/Data/Control_larval mass.csv")%>%
  select(day=Day, mass=Mass)%>%
  mutate(cannibalf=as.factor(1), pupation=0)

Larval_Growth=rbind(sizes,sizes2)%>% select(day,mass)

##Define the models for growth
##Model 1: VBGF growth with no negative term.
Model1 = function(t,ps){
  with(as.list(ps),{
    x1=(H*(1-A)*t+m0^(1-A))^(1/(1-A));
    return(x1);
    })}

##Model 2: VBGF growth with B=1
Model2 = function(t,ps){
  with(as.list(ps),{
    c=log(H-K*m0^(1-A))/((A-1)*K)
    x1=((H-exp((A-1)*K*(t+c)))/K)^(1/(1-A))
    return(x1);
    })
}

##Model 3: there is no analytical solution for the more general model so the system must be solved numerically.
gen.gr<-function(t,x,p){
  x1 <- p["H"]*(x[1])^p["A"]-p["K"]*x[1]^p["B"]
  return(list(c(x1)))
}
Model3 <- function(t,ps){
  pars <- c(ps["H"],ps["A"],ps["K"],ps["B"])
  ic <- c(ps[["m0"]])
  time = unique(sort(c(seq(0,max(t)+1,by=.1),t)))
  gen.gr.out <- lsode(ic,time,gen.gr,pars)
  tmp= data.frame(t=gen.gr.out[,1], Pred=gen.gr.out[,2])
  x1 <- gen.gr.out[match(t,gen.gr.out[,1]),2]
  
  return(x1)
}

## Fit  the models to data

###Model 1
nLL1= function(P,tydat){
  Times = tydat$day
  Ys = tydat$mass
  xout = Model1(Times,c(H=exp(P[["H"]]),A=exp(P[["A"]]),m0=exp(P[["m0"]])))
  negloglikli = -sum(dnorm(x=Ys,mean=xout,exp(P[["S"]]),log=TRUE))
  return(negloglikli)
}
RunOptim1 <-  function(theta0){
  P0= c(H=log(theta0[["H"]]), A=log(theta0[["A"]]), m0=log(theta0[["m0"]]), S=log(theta0[["sigma"]]))
  fit=optim(P0,nLL1,tydat=Larval_Growth)
  out=rbind(c(fit1=c(exp(fit$par),nLL=fit$value,conv.code=fit$convergence)))
  return(out)
}
###Run the moptimization to get an estimate of the parameters
theta0 = c(A=jitter(.6),H=jitter(1.3),m0=jitter(.1),sigma=5)
RunOptim1(theta0)

###Then repeat the optimization lots of times to see how much the best estimates change.
BestFitParams=c(H=NA,A=NA,m0=NA,S=NA,nLL=NA,conv.code=NA)
for(i in 1:1000){
  theta0 = c(A=(runif(1)-.5)*.25+.5,H=(runif(1)-.5)*.5+1.3,m0=(runif(1)-.5)*.05+.1,sigma=runif(1)*10)
  BestFitParams=rbind(RunOptim1(theta0),BestFitParams)
}
BestFitParams=BestFitParams[2:length(BestFitParams[,'fit1.conv.code']),]
BestFitParams=BestFitParams[BestFitParams[,'fit1.conv.code']==0,]
BestFitParams=BestFitParams[order(BestFitParams[,'fit1.nLL'],decreasing=FALSE),]
Model1BestFit=BestFitParams[1,]

#Look at the model for growth of one of the best sets of parameter values
params= c(H=Model1BestFit[['fit1.H']],A=Model1BestFit[['fit1.A']],m0=Model1BestFit[['fit1.m0']])
t = seq(0,17,by=.1)
PredWeight = Model1(t,params)
Model1OutPlot = data.frame(day=t, mass=PredWeight)

ggplot(data = Larval_Growth, aes(x=jitter(day), y=mass)) + theme_bw() + 
  geom_point(alpha=.5) +
  ylim(0,200)+
  geom_line(data=Model1OutPlot,aes(x=day, y=mass))+
  xlab("Age of larva (day)")+
  ylab("Mass of larva (grams)")
  
### Fit model 2 to the data
nLL2= function(P,tydat){
  Times = tydat$day
  Ys = tydat$mass
  xout = Model2(Times,c(H=exp(P[["H"]]),K=exp(P[["K"]]),A=exp(P[["A"]]),m0=exp(P[["m0"]])))
  negloglikli = -sum(dnorm(x=Ys,mean=xout,exp(P[["S"]]),log=TRUE))
  return(negloglikli)
}
RunOptim2 <-  function(theta0,mydata){
  P0= c(H=log(theta0[["H"]]), K=log(theta0[["K"]]), A=log(theta0[["A"]]), m0=log(theta0[["m0"]]), S=log(theta0[["sigma"]]))
fit=optim(P0,nLL2,tydat=mydata)
out=rbind(c(fit1=c(exp(fit$par),nLL=fit$value,conv.code=fit$convergence)))
  return(out)
}
theta0 = c(H=1,K=.7,A=.7,m0=1,sigma=5)
RunOptim2(theta0,Larval_Growth)

###Then repeat the optimization lots of times to see how much the best estimates change.
BestFitParams2=c(H=NA,A=NA,K=NA,m0=NA,S=NA,nLL=NA,conv.code=NA)
for(i in 1:10000){
  theta0 = c(A=(runif(1)-.5)*.25+.5,H=(runif(1)-.5)*.5+1.3,K=(runif(1)-.5)*.25+.5, m0=(runif(1)-.5)*.05+.1,sigma=runif(1)*10)
  BestFitParams2=rbind(RunOptim2(theta0,Larval_Growth),BestFitParams2)
}
BestFitParams2=BestFitParams2[2:length(BestFitParams2[,'fit1.conv.code']),]
BestFitParams2=BestFitParams2[BestFitParams2[,'fit1.conv.code']==0,]
BestFitParams2=BestFitParams2[order(BestFitParams2[,'fit1.nLL'],decreasing=FALSE),]
Model2BestFit=BestFitParams2[1,]

###Look at the model of growth for one of the best sets of parameter values. The top 100 parameter sets led to very very similarly shaped models. So we will not worry about the identifiability issues becuase functionally the effect of the variation is insignificant. Going beyond the best 10% leads to more variability in the line, but the top 10% of the models are all very similar to each other. 
t = seq(0,17,by=.1)

GetResults <- function(t,BestParams){
    params= c(H=BestParams[['fit1.H']],A=BestParams[['fit1.A']],K=BestParams[['fit1.K']],m0=BestParams[['fit1.m0']])
    ModelOut = data.frame(t=t, Pred=Model2(t,params))
    return(ModelOut[,2])
}

Model2Out= cbind(t,GetResults(t,BestFitParams2[1,]))
for(i in 2:100){
  Model2Out=cbind(Model2Out,GetResults(t,BestFitParams2[i,]))
}

p <-  ggplot(data = Larval_Growth, aes(x=jitter(day), y=mass)) + 
  theme_bw() + 
  geom_point(alpha=.3)+
  xlab("Age of larva (day)")+  ylab("Mass of larva (grams)")
i <- 1
data.frame(day=Model2Out[,1],mass=Model2Out[,2])
while(i <= length(Model2Out[1,])-1) {
  df <- data.frame(day=Model2Out[,1],mass=Model2Out[,i+1])
  p <- p + geom_line(data=df,aes(x=day, y=mass),alpha=.2)  
  i <- i + 1
}

p

Model2OutPlot <- data.frame(day=Model2Out[,1],mass=Model2Out[,2])

### Fit model 3 to the data
nLL3= function(P,tydat){
  Times = as.numeric(tydat$day)
  Ys = as.numeric(tydat$mass)
  xout = Model3(Times,c(H=exp(P[["H"]]),K=exp(P[["K"]]),A=exp(P[["A"]]),B=exp(P[["B"]]),m0=exp(P[["m0"]])))
  negloglikli = -sum(dnorm(x=Ys,mean=xout[[1]],exp(P[["S"]]),log=TRUE))
  return(negloglikli)
}
theta0 = c(H=1,K=.5,A=1,B=2,m0=.1,sigma=5)
P0= c(H=log(theta0[["H"]]), K=log(theta0[["K"]]), A=log(theta0[["A"]]), B=log(theta0[["B"]]),m0=log(theta0[["m0"]]), S=log(theta0[["sigma"]]))
fit=optim(P0,nLL3,tydat=Larval_Growth)

Model3BestFit=rbind(c(fit1=c(exp(fit$par),nLL=fit$value,conv.code=fit$convergence)))

params= c(H=Model3BestFit[[1,'fit1.H']],A=Model3BestFit[[1,'fit1.A']],B=Model3BestFit[[1,'fit1.B']],K=Model3BestFit[[1,'fit1.K']],m0=Model3BestFit[[1,'fit1.m0']])
t = seq(0,17,by=.1)
Model3OutPlot = data.frame(day=t, mass=Model3(t,params))

###Plot the best fit lines for all three models
ggplot(data = Larval_Growth, aes(x=jitter(day), y=mass)) + 
  theme_bw() + 
  geom_point(alpha=.3)+
  xlab("Age of larva (day)")+  ylab("Mass of larva (grams)")+
  geom_line(data=Model3OutPlot,aes(x=day, y=mass),linetype = "dotted")+
  geom_line(data=Model2OutPlot,aes(x=day, y=mass))+
  geom_line(data=Model1OutPlot,aes(x=day, y=mass), linetype  = "dashed")
  
  
