library(deSolve)
library(reshape2)
library(ggplot2)
library(dplyr)
library(permute)
library(gridExtra)
library(viridis)
library(gcookbook)

#load subfunctions and base parameters
source("Subfunctions.R") 
source("Params.R") #Baseline parameters
param=BaseParam

#Define the ODE with a function for growth that has periods of very slow growth and periods of rapid growth.
pulseODE <- function(t, state, param) {
  with(as.list(c(state, param)), {
    pre1= 1*(t<PredStart+PredVisitLength)*(t>PredStart) #Make a vector for each timestep with whether the predator is there
    u= 1*(t>=0) - forage*pre1 #forage unless the predator is present and you don't forage when pred is present
    dx1 <- u*(a1+a2*(sin((t+3*pi/4)))^ae)
    dx2 <- (-d*x2)-(m*u+b)*(1-(1-alpha)*x1/M)*p*x1*x2*pre1
    list(c(dx1, dx2))
  })
}

#Define parameters m and d
param[['m']]=.001
param[['d']]=.3

#Define parameters needed for the growth function.
param[['a1']]=.1
param[['a2']]=100
param[['ae']]=50

# Run the model for a range of times at which the predator arrives. Record the time and size of the prey at the 
# start of the predator visit, and the best strategy (forage or hide) and the resulting best survival probability 
# to size M.
Start=seq(1/24,12,by=2/24) 
tmp=as.data.frame(matrix(ncol=4, nrow=0))
  for(j in 1:length(Start)){
    param[['PredStart']]=Start[j]
    out=RunModel(param,pulseODE)
    tmp=rbind(tmp,c(Start[j],out)) #survival if forage, survival is no forage, best choice
  }
  names(tmp)=c('time','size','survival','best')  
tmp<-tmp%>%mutate(time=as.numeric(time), size=as.numeric(size),survival=as.numeric(survival))

# Find the times when prey growth is at least 1mg per timestep.
tmp$time[(tmp$size[2:144]-tmp$size[1:143])>1]

# Plot the mass of the prey at each timestep and whether the prey should hide or continue to forage if the predator were to arrive at that time. 
# Shade periods of growth that are at least 1mg per timestep.
p<-ggplot()+
  geom_point(data=tmp,aes(x=time, y=size,color=best), size=1)+
  xlab('Time (days)' )+ylab('Mass (mg)')+
  theme_bw()+
  theme(legend.position = c(0.8, 0.2),
        legend.title = element_blank(),
        legend.background = element_rect(fill="white",
                                  size=0.5, linetype="solid", 
                                  colour ="black"))+ 
  scale_colour_grey()+
    annotate("rect", xmin = 2.04, xmax = 2.56, ymin = 0, ymax = 160,
           alpha = .1,fill = "black")+
    annotate("rect", xmin = 5.2, xmax = 5.72, ymin = 0, ymax = 160,
           alpha = .1,fill = "black")+
    annotate("rect", xmin = 8.37, xmax = 8.9, ymin = 0, ymax = 160,
           alpha = .1,fill = "black")+
    annotate("rect", xmin = 11.45, xmax = 11.88, ymin = 0, ymax = 160,
           alpha = .1,fill = "black")
p 
